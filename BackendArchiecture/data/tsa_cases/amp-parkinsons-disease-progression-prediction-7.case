First of all, I would like to express my gratitude to everyone who organized this competition, thank you! Given the small amount of data, the competition was quite uncertain, but I'm glad that I was able to achieve good results.
Now, I will describe my solution below.


# Solution Overview
The important points of my solution are as follows.

## Rule-based Patient splitting (most important)
I was looking at train data and noticed that healthy patients with very low updrs values are tested only every other year (0, 12, 24, 36, 48, 60 month...) and semi-annual data (6, 18, 30, 42, 54 month ..) were not present.
This was also the case in the test data. Patients without data at either the 6th or 18th month would see a significant improvement in LB by lowering the UPDRs value.

## Modeling using only visit_month
Modeling basically uses only visit_month feature.  However, the "healthy patients with very low updrs values" mentioned in (1) always have low updrs even after a month has passed, so these patients are removed from the train for modeling. Supplemental data is also used, but data for patients with month = 5 and patients with only month = 0 data are removed.

The modeling used below.
- simple linear regression (referred  [AmbrosM notebook]( 
- catboost regression with loss as huber loss
- catboost regression with loss as mae loss
Three types of regression were created and weighted averaged to obtain a higher CV.
For validation, group k fold was performed by aligning the distribution of target as much as possible in each fold.


## Submit Selection
For the last submit, the following two sub were selected.

A. LB and CV Best sub: applying approaches 1) to 2), both LB and CV is high and align (CV:54.41 LB:54.4).
B. only CV Best sub: For patients for whom protein/peptido is available in the test data, using the results of the model with protein / peptido features without using the results of visit_month. In this case, CV improves by about 0.4, but LB decreases by the same amount.(CV:54.02 LB:54.9)

As a result, sub A was better score(Private:60.5). sub B score is 61.2.

In summary, it was a very uncertain competition, but by looking carefully at the data, and carefully adopting an approach that improves both CV and LB, I can achieve good results.


Basically I did all the work in kaggle notebook, so I am publishing the code. However, it has not been refactored, so readability is poor.
[Code](

